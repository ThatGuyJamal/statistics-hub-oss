{
  "category": "commands"
}
---
import { ApplyOptions } from "@sapphire/decorators";
import {
  BucketScope,
  ApplicationCommandRegistry,
  RegisterBehavior,
  ChatInputCommand,
} from "@sapphire/framework";
import { SubCommandPluginCommandOptions } from "@sapphire/plugin-subcommands";
import { Message } from "discord.js";
import { ENV } from "../../config";
import { ICommand } from "../../lib/client/command";
import { seconds } from "../../lib/util/times";

@ApplyOptions<SubCommandPluginCommandOptions>({
  description: "",
  cooldownDelay: seconds(10),
  cooldownScope: BucketScope.User,
  cooldownLimit: 2,
  runIn: "GUILD_TEXT",
  nsfw: false,
})
export class UserCommand extends ICommand {
  // Message Based Command
  public async messageRun(ctx: Message) {}
  // Slash Based Command
  public override async chatInputRun(
    ...[interaction]: Parameters<ChatInputCommand["chatInputRun"]>
  ) {}
  // slash command registry
  public override registerApplicationCommands(
    registry: ApplicationCommandRegistry
  ) {
    registry.registerChatInputCommand(
      (builder) => builder.setName(this.name).setDescription(this.description),
      {
        registerCommandIfMissing: ENV.bot.register_commands,
        behaviorWhenNotIdentical: RegisterBehavior.Overwrite,
        idHints: [],
      }
    );
  }
}